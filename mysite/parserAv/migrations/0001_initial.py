# Generated by Django 4.2.7 on 2024-05-13 12:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('amount', models.IntegerField(default=0, verbose_name='Общее количество объявлений')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CarModelsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=64, verbose_name='Модель')),
                ('model_index', models.IntegerField(verbose_name='Индекс в ссылке')),
            ],
        ),
        migrations.CreateModel(
            name='CarNamesList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_name', models.CharField(max_length=32, verbose_name='Марка')),
                ('car_index', models.IntegerField(verbose_name='Индекс в ссылке')),
            ],
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.TextField(max_length=32, verbose_name='Цвет')),
                ('color_hex', models.CharField(max_length=7, verbose_name='HEX')),
            ],
        ),
        migrations.CreateModel(
            name='Featured',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Марка & Модель машины')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('transmission', models.TextField(max_length=255, verbose_name='КПП')),
                ('volume', models.CharField(max_length=32, verbose_name='Объем двигателя & Запас хода')),
                ('engine', models.CharField(max_length=255, verbose_name='Двигатель')),
                ('body', models.CharField(max_length=255, verbose_name='Тип кузова')),
                ('mileage', models.IntegerField(verbose_name='Пробег')),
                ('price', models.CharField(max_length=255, verbose_name='Цена')),
                ('link', models.CharField(max_length=255, verbose_name='Ссылка')),
                ('location', models.TextField(max_length=255, verbose_name='Город')),
                ('note', models.CharField(default='', max_length=255, verbose_name='Примечания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='CustomUser_id')),
            ],
        ),
        migrations.CreateModel(
            name='Cars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('transmission', models.TextField(max_length=255, verbose_name='КПП')),
                ('volume', models.CharField(max_length=32, verbose_name='Объем двигателя & Запас хода')),
                ('engine', models.CharField(max_length=255, verbose_name='Двигатель')),
                ('body', models.CharField(max_length=255, verbose_name='Тип кузова')),
                ('mileage', models.IntegerField(verbose_name='Пробег')),
                ('price', models.CharField(max_length=255, verbose_name='Цена')),
                ('link', models.CharField(max_length=255, verbose_name='Ссылка')),
                ('message', models.CharField(verbose_name='Сообщение продавца')),
                ('location', models.TextField(max_length=255, verbose_name='Город')),
                ('status', models.TextField(default='Продается', max_length=16, verbose_name='Статус авто')),
                ('isFeatured', models.BooleanField(default=False, verbose_name='Избранное')),
                ('slug', models.SlugField(unique=True)),
                ('car_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parserAv.carmodelslist', verbose_name='CarModelsList_id')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='CustomUser_id')),
            ],
        ),
        migrations.AddField(
            model_name='carmodelslist',
            name='car',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parserAv.carnameslist', verbose_name='CarNamesList_id'),
        ),
        migrations.CreateModel(
            name='CarDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_link', models.CharField(max_length=255, verbose_name='Ссылка картинки')),
                ('body_section', models.BinaryField(default=None, null=True, verbose_name='Секция Кузов')),
                ('engine_section', models.BinaryField(default=None, null=True, verbose_name='Секция Двигатель')),
                ('transmission_section', models.BinaryField(default=None, null=True, verbose_name='Секция Трансмиссия и управление')),
                ('performance_indicators_section', models.BinaryField(default=None, null=True, verbose_name='Секция Эксплуатационные показатели')),
                ('suspension_and_brakes_section', models.BinaryField(default=None, null=True, verbose_name='Секция Подвеска и тормоза')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parserAv.cars', verbose_name='cars_id')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parserAv.colors', verbose_name='color_id')),
            ],
        ),
    ]
